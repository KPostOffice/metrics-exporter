apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: thoth-metrics-exporter-deployment
  annotations:
    description: >
      This is Thoth Metrics Exporter Deployment, this template is meant to be used by
      Bots, but could also be used by humans...
    openshift.io/display-name: 'Thoth Metrics Exporter Deployment'
    version: 0.5.0
    tags: thoth,thoth-metrics,thoth-metrics-exporter,ai-stacks,aistacks
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: >
      This is Thoth Metrics Exporter Deployment, this template is meant to be used
      by Bots, but could also be used by humans...
    template.openshift.io/provider-display-name: Red Hat, Inc.
    thoth-station.ninja/template-version: 0.5.0
  labels:
    template: thoth-metrics-exporter-deployment
    app: thoth
    component: metrics-exporter

parameters:
  - description: Tag of the ImageStream to use
    displayName: ImageStream Tag
    required: true
    name: IMAGE_STREAM_TAG
    value: 'latest'
  - description: Project the ImageStream to be use lives in
    displayName: ImageStream Project
    required: true
    name: IMAGE_STREAM_PROJECT_NAME

objects:
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: metrics-exporter
      annotations:
        thoth-station.ninja/template-version: 0.5.0
      labels:
        app: thoth
        component: metrics-exporter
    spec:
      to:
        kind: Service
        name: metrics-exporter

  - kind: Service
    apiVersion: v1
    metadata:
      annotations:
        thoth-station.ninja/template-version: 0.5.0
      labels:
        app: thoth
        component: metrics-exporter
      name: metrics-exporter
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        service: metrics-exporter

  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      annotations:
        thoth-station.ninja/template-version: 0.5.0
      labels:
        app: thoth
        component: metrics-exporter
      name: metrics-exporter
    spec:
      replicas: 1
      selector:
        service: metrics-exporter
      template:
        metadata:
          labels:
            service: metrics-exporter
        spec:
          serviceAccountName: metrics-exporter
          containers:
            - name: "metrics-exporter"
              env:
                - name: "THOTH_METRICS_EXPORTER_UPDATE_INTERVAL"
                  value: "20"
                - name: "THOTH_METRICS_EXPORTER_GRAFANA_REDIRECT_URL"
                  value: "https://grafana.datahub.redhat.com/"
                - name: "THOTH_METRICS_EXPORTER_MAX_WORKERS"
                  value: "16"
                - name: "THOTH_METRICS_EXPORTER_WEAK_READINESS"
                  # If set to 0, its not necessary to gather all metrics to become service ready.
                  value: "0"
                - name: "THOTH_FRONTEND_NAMESPACE"
                  valueFrom:
                    configMapKeyRef:
                      key: frontend-namespace
                      name: thoth
                - name: "THOTH_MIDDLETIER_NAMESPACE"
                  valueFrom:
                    configMapKeyRef:
                      key: middletier-namespace
                      name: thoth
                - name: "THOTH_BACKEND_NAMESPACE"
                  valueFrom:
                    configMapKeyRef:
                      key: backend-namespace
                      name: thoth
                - name: "THOTH_INFRA_NAMESPACE"
                  valueFrom:
                    configMapKeyRef:
                      key: infra-namespace
                      name: thoth
                - name: "THOTH_AMUN_NAMESPACE"
                  valueFrom:
                    configMapKeyRef:
                      key: amun-namespace
                      name: thoth
                - name: "THOTH_AMUN_INSPECTION_NAMESPACE"
                  valueFrom:
                    configMapKeyRef:
                      key: amun-inspection-namespace
                      name: thoth
                - name: "RSYSLOG_HOST"
                  valueFrom:
                    configMapKeyRef:
                      key: "rsyslog-host"
                      name: "thoth"
                - name: "RSYSLOG_PORT"
                  valueFrom:
                    configMapKeyRef:
                      key: "rsyslog-port"
                      name: "thoth"
                - name: "SENTRY_DSN"
                  valueFrom:
                    secretKeyRef:
                      name: "thoth"
                      key: "sentry-dsn"
                - name: THOTH_DEPLOYMENT_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: storage-bucket-name
                      name: thoth
                - name: THOTH_S3_ENDPOINT_URL
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-host
                      name: thoth
                - name: THOTH_CEPH_BUCKET
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-bucket-name
                      name: thoth
                - name: THOTH_CEPH_BUCKET_PREFIX
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-bucket-prefix
                      name: thoth
                - name: THOTH_CEPH_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: ceph-key-id
                - name: THOTH_CEPH_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: ceph-secret-key
                - name: THOTH_STORAGES_GRAPH_CACHE_DISABLED
                  value: "1"
                - name: KNOWLEDGE_GRAPH_HOST
                  valueFrom:
                    configMapKeyRef:
                      key: postgresql-host
                      name: thoth
                - name: KNOWLEDGE_GRAPH_PORT
                  value: "5432"
                - name: KNOWLEDGE_GRAPH_SSL_DISABLED
                  value: "1"
                - name: KNOWLEDGE_GRAPH_USER
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-user
                - name: KNOWLEDGE_GRAPH_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-password
                - name: KNOWLEDGE_GRAPH_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: database-name
                - name: PROMETHEUS_SERVICE_ACCOUNT_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: prometheus-reader
                      key: token
                - name: PROMETHEUS_URL
                  valueFrom:
                    configMapKeyRef:
                      name: thoth
                      key: metrics-prometheus-url
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                requests:
                  memory: "384Mi"
                  cpu: "2"
                limits:
                  memory: "768Mi"
                  cpu: "2"
              readinessProbe:
                httpGet:
                  path: "/metrics"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 780
                periodSeconds: 10
                timeoutSeconds: 10
              livenessProbe:
                httpGet:
                  path: "/metrics"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 600
                periodSeconds: 10
                timeoutSeconds: 10
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - metrics-exporter
            from:
              kind: ImageStreamTag
              name: 'metrics-exporter:${IMAGE_STREAM_TAG}'
              namespace: "${IMAGE_STREAM_PROJECT_NAME}"
